services:
    appwrite-realtime:
        entrypoint: realtime
        container_name: appwrite-realtime
        image: appwrite-dev
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.constraint-label-stack=appwrite"
            - "traefik.docker.network=appwrite"
            - "traefik.http.services.appwrite_realtime.loadbalancer.server.port=80"
            #ws
            - traefik.http.routers.appwrite_realtime_ws.entrypoints=appwrite_web
            - traefik.http.routers.appwrite_realtime_ws.rule=PathPrefix(`/v1/realtime`)
            - traefik.http.routers.appwrite_realtime_ws.service=appwrite_realtime
            # wss
            - traefik.http.routers.appwrite_realtime_wss.entrypoints=appwrite_websecure
            - traefik.http.routers.appwrite_realtime_wss.rule=PathPrefix(`/v1/realtime`)
            - traefik.http.routers.appwrite_realtime_wss.service=appwrite_realtime
            - traefik.http.routers.appwrite_realtime_wss.tls=true
        networks:
            - appwrite
        volumes:
            - ../app:/usr/src/code/app
            - ../src:/usr/src/code/src
        depends_on:
            - mariadb
            - redis
        environment:
            - _APP_ENV
            - _APP_WORKER_PER_CORE
            - _APP_OPTIONS_ABUSE
            - _APP_OPTIONS_ROUTER_PROTECTION
            - _APP_OPENSSL_KEY_V1
            - _APP_REDIS_HOST
            - _APP_REDIS_PORT
            - _APP_REDIS_USER
            - _APP_REDIS_PASS
            - _APP_DB_HOST
            - _APP_DB_PORT
            - _APP_DB_SCHEMA
            - _APP_DB_USER
            - _APP_DB_PASS
            - _APP_USAGE_STATS
            - _APP_LOGGING_CONFIG
            - _APP_DATABASE_SHARED_TABLES
